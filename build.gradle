buildscript {
    repositories {
        maven {
            url = 'https://plugins.gradle.org/m2'
        }

        dependencies {
            classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
            classpath 'gradle.plugin.net.minecrell:licenser:0.4.1'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.minecrell.licenser'

    group 'me.piggypiglet'
    version '1.1.21'
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        maven {
            url = 'https://repo.piggypiglet.me/repository/maven-releases/'

            content {
                includeGroup 'me.piggypiglet'
            }
        }
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    shadowJar {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
    
    license {
        header = file("$rootDir/LICENSE.md")
        ext {
            year = 2019
        }
        include '**/*.java'
    }

    compileJava.options.encoding = 'UTF-8'
}

def exportedProjects = [
        ":core",
        ":addons:console",
        ":addons:mysql",
        ":addons:logback",
        ":addons:http",
        ":addons:jars",
        ":bindings:bukkit",
        ":bindings:sponge",
        ":bindings:jda",
        ":bindings:velocity",
        ":bindings:bungeecord"
]

task allJavadoc(type: Javadoc) {
    source exportedProjects.collect {
        project(it).sourceSets.main.allJava
    }
    classpath = files(exportedProjects.collect {
        project(it).sourceSets.main.compileClasspath
    })
    destinationDir = file("${buildDir}/docs/javadoc")
}